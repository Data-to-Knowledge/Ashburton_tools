###################################################################################################################
[SERVER]
###################################################################################################################

server = edwprod01

###################################################################################################################
[PATH]
###################################################################################################################

#-root project directory
project_path = C:\Active\Projects\ashburton\naturalisation
####-all manual created input should be in the input folder - Results from this script will end up in the results folder
#-input folder (relative to project_path)
inputs_path = inputs
#-results folder (relative to project_path)
results_path = results4

###################################################################################################################
[DATE]
###################################################################################################################

#-Process consents/waps that were active from 'from_date' through 'to_date'.
from_date = 2009-01-01
to_date = 2018-12-31

###################################################################################################################
[SITES]
###################################################################################################################

#-Create shapefile with lowflow sites (1=Yes, 0=No). If 'create_lf_shp = 0', then it is assumed it's already created
#-and the 'lowflow_shp' is located within the 'results_path'.
create_lf_shp = 0
#-Site IDs of lowflow sites (in input_path)
lowflow_sites = ashburton_sites_v3.csv
#-Shapefile with lowflow sites to write to shapefile (in results_path)
lowflow_shp = lowflow_sites.shp


###################################################################################################################
[PCRASTER_LDD]
###################################################################################################################

#-This pcraster section aims to create a local drain direction network and to delineate catchments. This section may
#-be skipped if you already have your own delineated catchments.

#-Make LDD (create Local Drain Direction map, 1=Yes, 0=No). If make_ldd==0, then section between ----- can be left empty
#---------------------------------between here---------------------------------------------------------------------------
make_ldd = 0
#-DEM (*.map) (should be in inputs_path)
dem = dem250m_clipped.map

#-Burn rivers (1=Yes, 0=No)
burn_rivers = 1

#-Raster of rivers. Only needed if burn_rivers=1. Should be in inputs_path.
#raster_rivers = rec_rivers_250m_downstream_only.map
raster_rivers = rec_rivers_250m_downstream_only_modified_OShea.map

#-Ldd map - Is created in results_path.
ldd = ldd.map

#-Accuflux map - Is created in results_path.
accuflux = accuflux.map

#-Rivers map - Is created in results_path.
rivers = rivers.map
#-nr of upstream cells needed to define cell as being river.
river_cells = 10
#---------------------------------and here------------------------------------------------------------------------------

#-Make catchment map - Delineate pcraster catchment map using ldd (from above) and stations (1=Yes, 0=No).
#-If make_catchment == 0, then section between ----- can be left empty
#---------------------------------between here---------------------------------------------------------------------------
make_catchment = 0
#-Nominal pcraster map with stations - Should be created manually.
stations = flow_sites_modified.map
#stations = outlet.map
#-Catchment map - Is created in results_path.
catchment = catchment.map
#-Sub-catchment map - Is created in results_path.
subcatchment = subcatchment.map
#---------------------------------and here------------------------------------------------------------------------------

#-Cleanup catchment maps - only keep area covered by catchment maps en throw away surrounding cells (1=Yes, 0=No).
#-If clean_up_maps == 0, then section between ----- can be left empty
#---------------------------------between here---------------------------------------------------------------------------
clean_up_maps = 0
#-New ldd
ldd_clean = ldd2.map
#-New accuflux
accuflux_clean = accuflux2.map
#-New catchment
catchment_clean = catchment2.map
#-New sub-catchment
subcatchment_clean = subcatchment.map
#---------------------------------and here------------------------------------------------------------------------------

##-SOME MANUAL STEPS ARE NEEDED NOW TO CONVERT PCRASTER MAPS (FROM STEPS ABOVE) TO NESTED CATCHMENT SHAPEFILES FOR THE LOWFLOW SITES. NEEDS TO 
##-BE DONE BEFORE MOVING ON TO THE STEPS BELOW

###################################################################################################################
[CRC_WAP]
###################################################################################################################

#-This section extracts the consent/waps from the ECan databases based on the SWAZs and from_date and to_date, and finally clips those waps
#-based on the low flow site catchments. Results are a csv-file with all consent/wap details, and a shapefile with those waps joined to a
#-lowflow site.

#-Extract Consent/WAP information and save to a csv-file. If 'get_crc_wap_details = 0', then both 'crc_wap_csv' and 'wap_shp' already have been
#-created, and should be present in the 'results_path'.
get_crc_wap_details = 0
#-CSV-file with SWAZ for which to select WAPs
swaz_csv = SWAZ.csv
#-Cutuff depth for wells (deeper wells are not taken into account).
well_depth = 40
#-Path (relative to inputs_path) where delineated sub-catchments (nested) can be found
catch_path = del_subcatchments
#-CSV-file to store detailed consent/wap information
crc_wap_csv = Ashburton_crc_wap_with_K36_0914.csv
#-Shapefile with the upstream waps for each lowflow site catchment
wap_shp = Ashburton_waps_with_K36_0914.shp

#-Create csv-file of metered abstraction data for each wap (1=Yes,0=No). If 'create_wap_ts = 0', then 'wap_ts_csv' already has been created and should
#-be present in the 'results_path'. 
create_wap_ts = 0
wap_ts_csv = Ashburton_wap_ts_metered_with_K36_0914.csv


###################################################################################################################
[CALC_RATIOS]
###################################################################################################################

#-Calculate the maximum allocated volume, metered abstraction, and abstraction ratios for each date/crc/wap combi (1=Y, 0=No). If 'crc_wap_ratio = 0', then 'crc_wap_ratio_csv'
#-should be present in the 'results_path'.
crc_wap_ratio = 0
#-CSV-file to write the maximum allocated volume, metered abstraction, and abstraction ratios for each date/crc/wap combi.
crc_wap_ratio_csv = Ashburton_date_crc_wap_ratio.csv
#-Plot ratios in a normalized histogram for checking
plot_ratios = 0
#-Group ratios by 'month', 'use_type', 'swaz' (1=Y, 0=No). If 'group_ratios = 0', then 'crc_wap_ratio_filtered_csv' should be present in 'results_path'.
#-If 'group_ratios = 0', then other fields below can be left empty.
group_ratios = 0
#-Fill missing ratios with average ratio of other SWAZs for that use_type
fill_missing_ratios = 1
#-Filter ratios above threshold (if left empty, then no filtering is done)
ratio_threshold = 2
#-Show plots of grouped ratios
plot_grouped_ratios = 0
#-CSV-file to with ratios grouped by 'month', 'use_type', 'swaz'. Ratios are based on ratios above threshold (if provided above).
crc_wap_ratio_grouped_csv = Ashburton_ratio_grouped.csv

###################################################################################################################
[ESTIMATE_USAGE]
###################################################################################################################

#-Estimate usage using the monthly ratios calculated above and the maximum daily volume (1=Y, 0=No)
estimate_usage = 0
#-CSV-file to write estimated usage to
estimated_usage_csv = Ashburton_date_allo_usage.csv

###################################################################################################################
[ACCU_LOWFLOW_SITE]
###################################################################################################################

#-Accumulates max allocated volume, usage (metered or estimated), and the surface water loss (=usage for sw take, but sd rate for gw take) by
#-date and lowflow site, taking into account all the waps upstream of that lowflow site

#-Calculate accumulated volume, usage, and surface water loss per flow flow site? (1=Y, 0=No). If no, then remainder of section can be empty. All units will be in m3/s
accu_LowFlowSite = 0
#-Save time-series of allocated volume, usage, and surface water loss also by wap as an intermediate step.
#-CSV-file for wap max allocated volume
wap_max_vol_csv = Ashburton_wap_max_vol.csv
#-CSV-file for wap usage
wap_usage_csv = Ashburton_wap_usage.csv
#-CSV-file for wap surface water loss
wap_sw_loss_csv = Ashburton_wap_sw_loss.csv

#-CSV-file for max allocated volume per lowflow site
lf_max_vol_csv = Ashburton_LF_max_vol.csv
#-CSV-file for lowflow site usage
lf_usage_csv = Ashburton_LF_usage.csv
#-CSV-file for lowflow site surface water loss
lf_sw_loss_csv = Ashburton_LF_sw_loss.csv

####################################
[USAGE_UNCERTAINTY]
#####################################

#-Flag to make figures that compare maximum allocated volumes with the volume that is potentially covered with meters AND figures that compare metered with estimated volumes. Figures are made for each lowflow
#-site. Figures are saved in the results folder.
analyse_uncertainty = 0

###################################################################################################################
[FLOW_CORRELATIONS]
###################################################################################################################

#-Estimate correlations for sites that do not have a recorder (1=Y, 0=No). If no, then remainder of this section can be left empty.
estimate_correlations = 0
#-Minimum number of observations required for a site to be included for the correlations
min_flow_obs = 4
#-Buffer distance in meters from manual gaugings to search for recorder sites 
buf_dist = 20000
#-Use only winter flows (May through September) for correlations (1=Y, 0=No)
filter_winter_flow = 0
#-List with station ID / date combinations for which flow records should be removed before correlations are carried out. If multiple dates and/or stations, then add these to the list
#-and separate by comma. E.g.: 69,1985-02-18,69,1985-02-19,321,2000-01-30. Leave empty if no records should be removed
remove_stat_dates = 69,1985-02-18
#-Shapefile to save recorder sites used for correlations
rec_sites_shp = rec_sites_buffer.shp
#-CSV-file for saving flow time-series of all sites
flow_ts_csv = recorder_gauged_flow.csv
#-CSV-file to save the best correlations
correlations_csv = Ashburton_correlations.csv


######################################################################################################################
[ESTIMATE_FLOW]
######################################################################################################################

#-Fill gaps in recorded flow time-series using most recent value until a new flow value is recorded. Estimate flow for
#-gauged sites using relationships established in the previous section. (1=Y, 0=No). If no, then remainder of section
#-can be left empty.
estimate_flow_for_gauged_sites = 0
#-Get stats for one recorder site to filter out high flows (because they can cause discprensies in estimating flow for correlated sites)
statistics_site = 68801

#-CSV-file to write time-series of filled (with most recent recorded flow on NaNs) recorded flow time-series
flow_filled_ts_csv = Ashburton_recorder_flow_filled.csv
#-CSV-file with summary of correlations to use
correlations_csv = selected_correlations.csv
#correlations_csv = selected_correlations_test.csv
#-CSV-file to write estimated flow time-series for gauged sites (indicated as 'y' in the correlations_csv)
estimated_ts_csv = Ashburton_estimated_flow.csv

#############-NOT USED BELOW BECAUSE DOES NOT WORK YET 
########-CSV-file to write estimated flow time-series for gauged sites (indicated as 'y' in the correlations_csv) but values are set to NaN
########-if flow of "statistics_site" exceeds the 90-percentile threshold on that date.
########estimated_ts_P90_cutoff_csv = Ashburton_estimated_flow_P90_cutoff.csv


#######################################################################################################################
[USAGE_SCENARIOS]

#-Summarize losses (sw take + gw sd depletion) per scenario for each lowflow site using the WAPs within the associated catchment of that lowflow site (without upstream lowflow site catchments).
#-Uses a csv-file with the header corresponding to the scenarios, and the first column indicating the lowflow sites. The WAPs that need to be summarized are then found as values in the column.

#-calculate usage scenarios flag (1=Y, 0=No). If no, then remaining of section can be left empty.
calc_usage_scenarios = 1
#-csv-file with the waps and scenarios
scenario_csv = WAPs split in use and rules above min flow sites.csv
#-lowflow site number column name
lf_col_name = sitenumber
#-consent number column name
crc_col_name = consentnumber
#-block column name
block_col_name = A or B
#-fill value for missing block value
fill_block_value = A


 

